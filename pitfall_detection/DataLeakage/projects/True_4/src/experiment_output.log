DatasetDict({
    train: Dataset({
        features: ['id', 'sequence', 'label', 'tokens'],
        num_rows: 20000
    })
    validation: Dataset({
        features: ['id', 'sequence', 'label', 'tokens'],
        num_rows: 5000
    })
    test: Dataset({
        features: ['id', 'sequence', 'label', 'tokens'],
        num_rows: 10000
    })
})
Dataset splits: dict_keys(['train', 'validation', 'test'])
Vocabulary size: 17

>> Experiment with candidate_count = 4
This training experiment shows the convergence behavior using a hybrid grid-CNN with latent HMM module. The candidate_count parameter (which influences the number of latent predicates considered) is set to: 4
Epoch 1/3, Training Loss: 0.7086
Epoch 2/3, Training Loss: 0.6241
Epoch 3/3, Training Loss: 0.5020

Evaluation on Development Set for candidate_count = 4
This result demonstrates how well the model distinguishes whether the input sequence satisfies the hidden poly-rule. Accuracy, precision, and recall are computed, and candidate latent probabilities offer interpretability into which latent predicates are prioritized.
Dev Set Accuracy: 50.00%
Precision: 0.48, Recall: 0.62

Final Evaluation on Test Set for candidate_count = 4
This final evaluation on unseen data shows the overall generalization of the hybrid architecture. A non-zero accuracy confirms that the model has learned to capture the hidden poly-rule using both grid-based features and latent rule extraction.
Test Set Accuracy: 56.00%

>> Experiment with candidate_count = 8
This training experiment shows the convergence behavior using a hybrid grid-CNN with latent HMM module. The candidate_count parameter (which influences the number of latent predicates considered) is set to: 8
Epoch 1/3, Training Loss: 0.7054
Epoch 2/3, Training Loss: 0.6103
Epoch 3/3, Training Loss: 0.4582

Evaluation on Development Set for candidate_count = 8
This result demonstrates how well the model distinguishes whether the input sequence satisfies the hidden poly-rule. Accuracy, precision, and recall are computed, and candidate latent probabilities offer interpretability into which latent predicates are prioritized.
Dev Set Accuracy: 50.00%
Precision: 0.48, Recall: 0.50

Final Evaluation on Test Set for candidate_count = 8
This final evaluation on unseen data shows the overall generalization of the hybrid architecture. A non-zero accuracy confirms that the model has learned to capture the hidden poly-rule using both grid-based features and latent rule extraction.
Test Set Accuracy: 54.00%

Figure_1.png saved: Training loss curves for experiments with different candidate counts showing convergence behavior.
Figure_2.png saved: Bar plot of average latent candidate probabilities for experiments, illustrating which latent predicates are being prioritized across different candidate count settings.

Summary of Experiment Results:
Candidate Count = 4: Dev Acc = 50.00%, Test Acc = 56.00%, Precision = 0.48, Recall = 0.62
Candidate Count = 8: Dev Acc = 50.00%, Test Acc = 54.00%, Precision = 0.48, Recall = 0.50
