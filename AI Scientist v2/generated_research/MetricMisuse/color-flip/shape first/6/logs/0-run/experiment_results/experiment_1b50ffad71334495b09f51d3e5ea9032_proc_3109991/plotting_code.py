import matplotlib.pyplot as plt
import numpy as np

We load experiment_data.npy, iterate through each experiment and dataset to retrieve epochs, loss arrays and validation metrics. For every dataset we first create a line plot showing training- and validation-loss versus epoch, helping to diagnose over/under-fitting. Next we collect the per-epoch validation SWA, CWA and SCAA values and place them on one figure so the user can track the metric evolution. Because predictions and ground-truth vectors are stored only for the final epoch, we compute and print the overall accuracy and a 2Ã—2 confusion matrix; additionally we visualise this matrix with imshow to give a quick performance snapshot. Each of the three figures is wrapped in its own try-except block, saved to working_dir with descriptive filenames that include the dataset name and plot type, then closed. We respect the plotting guidelines: basic matplotlib, clear titles/subtitles, no synthetic data generation, and no more than five figures. Finally the script prints the last-epoch metrics for quick reference.